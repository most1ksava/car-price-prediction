services:
  # PostgreSQL для хранения метаданных MLFlow
  postgres:
    image: postgres:14
    container_name: mlflow-postgres
    restart: always
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mlflow"]
      interval: 5s
      retries: 5

  # MinIO для хранения артефактов 
  minio:
    image: minio/minio:latest
    container_name: mlflow-minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  # MinIO Client для создания бакета
  mc:
    image: minio/mc:latest
    container_name: minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/mlflow;
      exit 0;
      "

  # MLFlow сервер
  mlflow:
    image: python:3.9-slim
    container_name: mlflow-server
    restart: always
    depends_on:
      - postgres
      - minio
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/mlflow
    command: >
      bash -c "pip install mlflow psycopg2-binary boto3 && 
      mlflow server 
      --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow 
      --default-artifact-root s3://mlflow/ 
      --host 0.0.0.0"

  # FastAPI 
  fastapi:
    build:
      context: .
      dockerfile: fastapi.Dockerfile
    container_name: fastapi-service
    restart: always
    depends_on:
      - mlflow
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  postgres_data:
  minio_data: 